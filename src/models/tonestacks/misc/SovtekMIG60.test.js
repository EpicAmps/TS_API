import { SovtekMIG60 } from './SovtekMIG60';
import { testTonestack } from '../_testTonestack';

testTonestack(SovtekMIG60, function (controlValues) {
  const { RIN, R1, RB, RM1, RM2, RT1, RT2, RL, C1, C2, C3, C4 } = this.extractCoefficientVariables(controlValues);

  const b0 = 0;
  const b1 = C1*RB*RL + C1*RL*RM1 + C1*RL*RM2 + C1*RL*RT2 + C2*RB*RL + C2*RL*RM1 + C2*RL*RM2 + C3*RL*RM2;
  const b2 = C1*C2*R1*RB*RL + C1*C2*R1*RL*RM1 + C1*C2*R1*RL*RM2 + C1*C2*R1*RL*RT2 + C1*C2*RB*RL*RT1 + C1*C2*RB*RL*RT2 + C1*C2*RL*RM1*RT1 + C1*C2*RL*RM1*RT2 + C1*C2*RL*RM2*RT1 + C1*C2*RL*RM2*RT2 + C1*C3*R1*RB*RL + C1*C3*R1*RL*RM1 + C1*C3*R1*RL*RM2 + C1*C3*R1*RL*RT2 + C1*C3*RB*RL*RM2 + C1*C3*RL*RM1*RM2 + C1*C3*RL*RM2*RT1 + C1*C3*RL*RM2*RT2 + C1*C4*RB*RL*RM2 + C1*C4*RL*RM1*RM2 + C1*C4*RL*RM2*RT2 + C2*C3*RB*RL*RM2 + C2*C3*RL*RM1*RM2 + C2*C4*RB*RL*RM2 + C2*C4*RL*RM1*RM2;
  const b3 = C1*C2*C3*R1*RB*RL*RM2 + C1*C2*C3*R1*RB*RL*RT2 + C1*C2*C3*R1*RL*RM1*RM2 + C1*C2*C3*R1*RL*RM1*RT2 + C1*C2*C3*RB*RL*RM2*RT1 + C1*C2*C3*RB*RL*RM2*RT2 + C1*C2*C3*RL*RM1*RM2*RT1 + C1*C2*C3*RL*RM1*RM2*RT2 + C1*C2*C4*R1*RB*RL*RM2 + C1*C2*C4*R1*RL*RM1*RM2 + C1*C2*C4*R1*RL*RM2*RT2 + C1*C2*C4*RB*RL*RM2*RT1 + C1*C2*C4*RB*RL*RM2*RT2 + C1*C2*C4*RL*RM1*RM2*RT1 + C1*C2*C4*RL*RM1*RM2*RT2 + C1*C3*C4*R1*RB*RL*RM2 + C1*C3*C4*R1*RL*RM1*RM2 + C1*C3*C4*R1*RL*RM2*RT2;
  const b4 = C1*C2*C3*C4*R1*RB*RL*RM2*RT2 + C1*C2*C3*C4*R1*RL*RM1*RM2*RT2;

  const a0 = RB + RL + RM1 + RM2 + RT2;
  const a1 = C1*RB*RIN + C1*RB*RL + C1*RB*RT1 + C1*RIN*RL + C1*RIN*RM1 + C1*RIN*RM2 + C1*RIN*RT2 + C1*RL*RM1 + C1*RL*RM2 + C1*RL*RT1 + C1*RL*RT2 + C1*RM1*RT1 + C1*RM2*RT1 + C1*RT1*RT2 + C2*R1*RB + C2*R1*RL + C2*R1*RM1 + C2*R1*RM2 + C2*R1*RT2 + C2*RB*RIN + C2*RB*RL + C2*RB*RT2 + C2*RIN*RL + C2*RIN*RM1 + C2*RIN*RM2 + C2*RIN*RT2 + C2*RL*RM1 + C2*RL*RM2 + C2*RM1*RT2 + C2*RM2*RT2 + C3*R1*RB + C3*R1*RL + C3*R1*RM1 + C3*R1*RM2 + C3*R1*RT2 + C3*RB*RIN + C3*RB*RM2 + C3*RIN*RL + C3*RIN*RM1 + C3*RIN*RM2 + C3*RIN*RT2 + C3*RL*RM2 + C3*RM1*RM2 + C3*RM2*RT2 + C4*RB*RM2 + C4*RL*RM2 + C4*RM1*RM2 + C4*RM2*RT2;
  const a2 = C1*C2*R1*RB*RIN + C1*C2*R1*RB*RL + C1*C2*R1*RB*RT1 + C1*C2*R1*RIN*RL + C1*C2*R1*RIN*RM1 + C1*C2*R1*RIN*RM2 + C1*C2*R1*RIN*RT2 + C1*C2*R1*RL*RM1 + C1*C2*R1*RL*RM2 + C1*C2*R1*RL*RT1 + C1*C2*R1*RL*RT2 + C1*C2*R1*RM1*RT1 + C1*C2*R1*RM2*RT1 + C1*C2*R1*RT1*RT2 + C1*C2*RB*RIN*RT1 + C1*C2*RB*RIN*RT2 + C1*C2*RB*RL*RT1 + C1*C2*RB*RL*RT2 + C1*C2*RB*RT1*RT2 + C1*C2*RIN*RL*RT1 + C1*C2*RIN*RL*RT2 + C1*C2*RIN*RM1*RT1 + C1*C2*RIN*RM1*RT2 + C1*C2*RIN*RM2*RT1 + C1*C2*RIN*RM2*RT2 + C1*C2*RIN*RT1*RT2 + C1*C2*RL*RM1*RT1 + C1*C2*RL*RM1*RT2 + C1*C2*RL*RM2*RT1 + C1*C2*RL*RM2*RT2 + C1*C2*RM1*RT1*RT2 + C1*C2*RM2*RT1*RT2 + C1*C3*R1*RB*RIN + C1*C3*R1*RB*RL + C1*C3*R1*RB*RT1 + C1*C3*R1*RIN*RL + C1*C3*R1*RIN*RM1 + C1*C3*R1*RIN*RM2 + C1*C3*R1*RIN*RT2 + C1*C3*R1*RL*RM1 + C1*C3*R1*RL*RM2 + C1*C3*R1*RL*RT1 + C1*C3*R1*RL*RT2 + C1*C3*R1*RM1*RT1 + C1*C3*R1*RM2*RT1 + C1*C3*R1*RT1*RT2 + C1*C3*RB*RIN*RL + C1*C3*RB*RIN*RM2 + C1*C3*RB*RIN*RT1 + C1*C3*RB*RL*RM2 + C1*C3*RB*RM2*RT1 + C1*C3*RIN*RL*RM1 + C1*C3*RIN*RL*RT1 + C1*C3*RIN*RL*RT2 + C1*C3*RIN*RM1*RM2 + C1*C3*RIN*RM1*RT1 + C1*C3*RIN*RM2*RT1 + C1*C3*RIN*RM2*RT2 + C1*C3*RIN*RT1*RT2 + C1*C3*RL*RM1*RM2 + C1*C3*RL*RM2*RT1 + C1*C3*RL*RM2*RT2 + C1*C3*RM1*RM2*RT1 + C1*C3*RM2*RT1*RT2 + C1*C4*RB*RIN*RM2 + C1*C4*RB*RL*RM2 + C1*C4*RB*RM2*RT1 + C1*C4*RIN*RL*RM2 + C1*C4*RIN*RM1*RM2 + C1*C4*RIN*RM2*RT2 + C1*C4*RL*RM1*RM2 + C1*C4*RL*RM2*RT1 + C1*C4*RL*RM2*RT2 + C1*C4*RM1*RM2*RT1 + C1*C4*RM2*RT1*RT2 + C2*C3*R1*RB*RL + C2*C3*R1*RB*RM2 + C2*C3*R1*RB*RT2 + C2*C3*R1*RL*RM1 + C2*C3*R1*RM1*RM2 + C2*C3*R1*RM1*RT2 + C2*C3*RB*RIN*RL + C2*C3*RB*RIN*RM2 + C2*C3*RB*RIN*RT2 + C2*C3*RB*RL*RM2 + C2*C3*RB*RM2*RT2 + C2*C3*RIN*RL*RM1 + C2*C3*RIN*RM1*RM2 + C2*C3*RIN*RM1*RT2 + C2*C3*RL*RM1*RM2 + C2*C3*RM1*RM2*RT2 + C2*C4*R1*RB*RM2 + C2*C4*R1*RL*RM2 + C2*C4*R1*RM1*RM2 + C2*C4*R1*RM2*RT2 + C2*C4*RB*RIN*RM2 + C2*C4*RB*RL*RM2 + C2*C4*RB*RM2*RT2 + C2*C4*RIN*RL*RM2 + C2*C4*RIN*RM1*RM2 + C2*C4*RIN*RM2*RT2 + C2*C4*RL*RM1*RM2 + C2*C4*RM1*RM2*RT2 + C3*C4*R1*RB*RM2 + C3*C4*R1*RL*RM2 + C3*C4*R1*RM1*RM2 + C3*C4*R1*RM2*RT2 + C3*C4*RB*RIN*RM2 + C3*C4*RIN*RL*RM2 + C3*C4*RIN*RM1*RM2 + C3*C4*RIN*RM2*RT2;
  const a3 = C1*C2*C3*R1*RB*RIN*RL + C1*C2*C3*R1*RB*RIN*RM2 + C1*C2*C3*R1*RB*RIN*RT2 + C1*C2*C3*R1*RB*RL*RM2 + C1*C2*C3*R1*RB*RL*RT1 + C1*C2*C3*R1*RB*RL*RT2 + C1*C2*C3*R1*RB*RM2*RT1 + C1*C2*C3*R1*RB*RT1*RT2 + C1*C2*C3*R1*RIN*RL*RM1 + C1*C2*C3*R1*RIN*RM1*RM2 + C1*C2*C3*R1*RIN*RM1*RT2 + C1*C2*C3*R1*RL*RM1*RM2 + C1*C2*C3*R1*RL*RM1*RT1 + C1*C2*C3*R1*RL*RM1*RT2 + C1*C2*C3*R1*RM1*RM2*RT1 + C1*C2*C3*R1*RM1*RT1*RT2 + C1*C2*C3*RB*RIN*RL*RT1 + C1*C2*C3*RB*RIN*RL*RT2 + C1*C2*C3*RB*RIN*RM2*RT1 + C1*C2*C3*RB*RIN*RM2*RT2 + C1*C2*C3*RB*RIN*RT1*RT2 + C1*C2*C3*RB*RL*RM2*RT1 + C1*C2*C3*RB*RL*RM2*RT2 + C1*C2*C3*RB*RM2*RT1*RT2 + C1*C2*C3*RIN*RL*RM1*RT1 + C1*C2*C3*RIN*RL*RM1*RT2 + C1*C2*C3*RIN*RM1*RM2*RT1 + C1*C2*C3*RIN*RM1*RM2*RT2 + C1*C2*C3*RIN*RM1*RT1*RT2 + C1*C2*C3*RL*RM1*RM2*RT1 + C1*C2*C3*RL*RM1*RM2*RT2 + C1*C2*C3*RM1*RM2*RT1*RT2 + C1*C2*C4*R1*RB*RIN*RM2 + C1*C2*C4*R1*RB*RL*RM2 + C1*C2*C4*R1*RB*RM2*RT1 + C1*C2*C4*R1*RIN*RL*RM2 + C1*C2*C4*R1*RIN*RM1*RM2 + C1*C2*C4*R1*RIN*RM2*RT2 + C1*C2*C4*R1*RL*RM1*RM2 + C1*C2*C4*R1*RL*RM2*RT1 + C1*C2*C4*R1*RL*RM2*RT2 + C1*C2*C4*R1*RM1*RM2*RT1 + C1*C2*C4*R1*RM2*RT1*RT2 + C1*C2*C4*RB*RIN*RM2*RT1 + C1*C2*C4*RB*RIN*RM2*RT2 + C1*C2*C4*RB*RL*RM2*RT1 + C1*C2*C4*RB*RL*RM2*RT2 + C1*C2*C4*RB*RM2*RT1*RT2 + C1*C2*C4*RIN*RL*RM2*RT1 + C1*C2*C4*RIN*RL*RM2*RT2 + C1*C2*C4*RIN*RM1*RM2*RT1 + C1*C2*C4*RIN*RM1*RM2*RT2 + C1*C2*C4*RIN*RM2*RT1*RT2 + C1*C2*C4*RL*RM1*RM2*RT1 + C1*C2*C4*RL*RM1*RM2*RT2 + C1*C2*C4*RM1*RM2*RT1*RT2 + C1*C3*C4*R1*RB*RIN*RM2 + C1*C3*C4*R1*RB*RL*RM2 + C1*C3*C4*R1*RB*RM2*RT1 + C1*C3*C4*R1*RIN*RL*RM2 + C1*C3*C4*R1*RIN*RM1*RM2 + C1*C3*C4*R1*RIN*RM2*RT2 + C1*C3*C4*R1*RL*RM1*RM2 + C1*C3*C4*R1*RL*RM2*RT1 + C1*C3*C4*R1*RL*RM2*RT2 + C1*C3*C4*R1*RM1*RM2*RT1 + C1*C3*C4*R1*RM2*RT1*RT2 + C1*C3*C4*RB*RIN*RL*RM2 + C1*C3*C4*RB*RIN*RM2*RT1 + C1*C3*C4*RIN*RL*RM1*RM2 + C1*C3*C4*RIN*RL*RM2*RT1 + C1*C3*C4*RIN*RL*RM2*RT2 + C1*C3*C4*RIN*RM1*RM2*RT1 + C1*C3*C4*RIN*RM2*RT1*RT2 + C2*C3*C4*R1*RB*RL*RM2 + C2*C3*C4*R1*RB*RM2*RT2 + C2*C3*C4*R1*RL*RM1*RM2 + C2*C3*C4*R1*RM1*RM2*RT2 + C2*C3*C4*RB*RIN*RL*RM2 + C2*C3*C4*RB*RIN*RM2*RT2 + C2*C3*C4*RIN*RL*RM1*RM2 + C2*C3*C4*RIN*RM1*RM2*RT2;
  const a4 = C1*C2*C3*C4*R1*RB*RIN*RL*RM2 + C1*C2*C3*C4*R1*RB*RIN*RM2*RT2 + C1*C2*C3*C4*R1*RB*RL*RM2*RT1 + C1*C2*C3*C4*R1*RB*RL*RM2*RT2 + C1*C2*C3*C4*R1*RB*RM2*RT1*RT2 + C1*C2*C3*C4*R1*RIN*RL*RM1*RM2 + C1*C2*C3*C4*R1*RIN*RM1*RM2*RT2 + C1*C2*C3*C4*R1*RL*RM1*RM2*RT1 + C1*C2*C3*C4*R1*RL*RM1*RM2*RT2 + C1*C2*C3*C4*R1*RM1*RM2*RT1*RT2 + C1*C2*C3*C4*RB*RIN*RL*RM2*RT1 + C1*C2*C3*C4*RB*RIN*RL*RM2*RT2 + C1*C2*C3*C4*RB*RIN*RM2*RT1*RT2 + C1*C2*C3*C4*RIN*RL*RM1*RM2*RT1 + C1*C2*C3*C4*RIN*RL*RM1*RM2*RT2 + C1*C2*C3*C4*RIN*RM1*RM2*RT1*RT2;

  return [
    [b0, b1, b2, b3, b4],
    [a0, a1, a2, a3, a4]
  ];
});