import { BigMuffPickle } from './BigMuffPickle';
import { testTonestack } from '../_testTonestack';

testTonestack(BigMuffPickle, function (controlValues) {
  const { RIN, R1, R2, RC1, RC2, RM, RT1, RT2, RL, C1, C2, C3, C4 } = this.extractCoefficientVariables(controlValues);

  const b0 = 0;
  const b1 = C4*R2*RL + C4*RL*RM + C4*RL*RT1;
  const b2 = C2*C4*R1*R2*RL + C2*C4*R1*RL*RM + C2*C4*R2*RC2*RL + C2*C4*R2*RL*RT1 + C2*C4*R2*RL*RT2 + C2*C4*RC2*RL*RM + C2*C4*RC2*RL*RT1 + C2*C4*RL*RM*RT1 + C2*C4*RL*RM*RT2 + C3*C4*R1*R2*RL + C3*C4*R1*RL*RM + C3*C4*R2*RC1*RL + C3*C4*R2*RL*RT1 + C3*C4*R2*RL*RT2 + C3*C4*RC1*RL*RM + C3*C4*RC1*RL*RT1 + C3*C4*RL*RM*RT1 + C3*C4*RL*RM*RT2;
  const b3 = C1*C2*C4*R1*R2*RL*RT2 + C1*C2*C4*R1*RL*RM*RT2 + C1*C3*C4*R1*R2*RL*RT2 + C1*C3*C4*R1*RL*RM*RT2 + C2*C3*C4*R1*R2*RC1*RL + C2*C3*C4*R1*R2*RC2*RL + C2*C3*C4*R1*RC1*RL*RM + C2*C3*C4*R1*RC2*RL*RM + C2*C3*C4*R2*RC1*RC2*RL + C2*C3*C4*R2*RC1*RL*RT1 + C2*C3*C4*R2*RC1*RL*RT2 + C2*C3*C4*R2*RC2*RL*RT1 + C2*C3*C4*R2*RC2*RL*RT2 + C2*C3*C4*RC1*RC2*RL*RM + C2*C3*C4*RC1*RC2*RL*RT1 + C2*C3*C4*RC1*RL*RM*RT1 + C2*C3*C4*RC1*RL*RM*RT2 + C2*C3*C4*RC2*RL*RM*RT1 + C2*C3*C4*RC2*RL*RM*RT2;
  const b4 = C1*C2*C3*C4*R1*R2*RC1*RL*RT2 + C1*C2*C3*C4*R1*R2*RC2*RL*RT2 + C1*C2*C3*C4*R1*RC1*RL*RM*RT2 + C1*C2*C3*C4*R1*RC2*RL*RM*RT2;

  const a0 = R1 + R2 + RIN + RM + RT1 + RT2;
  const a1 = C1*R1*R2 + C1*R1*RM + C1*R1*RT1 + C1*R1*RT2 + C1*R2*RIN + C1*RIN*RM + C1*RIN*RT1 + C1*RIN*RT2 + C2*R1*R2 + C2*R1*RC2 + C2*R1*RIN + C2*R1*RM + C2*R2*RC2 + C2*R2*RT1 + C2*R2*RT2 + C2*RC2*RIN + C2*RC2*RM + C2*RC2*RT1 + C2*RC2*RT2 + C2*RIN*RT1 + C2*RIN*RT2 + C2*RM*RT1 + C2*RM*RT2 + C3*R1*R2 + C3*R1*RC1 + C3*R1*RIN + C3*R1*RM + C3*R2*RC1 + C3*R2*RT1 + C3*R2*RT2 + C3*RC1*RIN + C3*RC1*RM + C3*RC1*RT1 + C3*RC1*RT2 + C3*RIN*RT1 + C3*RIN*RT2 + C3*RM*RT1 + C3*RM*RT2 + C4*R1*R2 + C4*R1*RL + C4*R1*RM + C4*R1*RT1 + C4*R2*RIN + C4*R2*RL + C4*R2*RT2 + C4*RIN*RL + C4*RIN*RM + C4*RIN*RT1 + C4*RL*RM + C4*RL*RT1 + C4*RL*RT2 + C4*RM*RT2 + C4*RT1*RT2;
  const a2 = C1*C2*R1*R2*RC2 + C1*C2*R1*R2*RIN + C1*C2*R1*R2*RT1 + C1*C2*R1*R2*RT2 + C1*C2*R1*RC2*RM + C1*C2*R1*RC2*RT1 + C1*C2*R1*RC2*RT2 + C1*C2*R1*RIN*RM + C1*C2*R1*RIN*RT1 + C1*C2*R1*RIN*RT2 + C1*C2*R1*RM*RT1 + C1*C2*R1*RM*RT2 + C1*C2*R2*RC2*RIN + C1*C2*R2*RIN*RT1 + C1*C2*R2*RIN*RT2 + C1*C2*RC2*RIN*RM + C1*C2*RC2*RIN*RT1 + C1*C2*RC2*RIN*RT2 + C1*C2*RIN*RM*RT1 + C1*C2*RIN*RM*RT2 + C1*C3*R1*R2*RC1 + C1*C3*R1*R2*RIN + C1*C3*R1*R2*RT1 + C1*C3*R1*R2*RT2 + C1*C3*R1*RC1*RM + C1*C3*R1*RC1*RT1 + C1*C3*R1*RC1*RT2 + C1*C3*R1*RIN*RM + C1*C3*R1*RIN*RT1 + C1*C3*R1*RIN*RT2 + C1*C3*R1*RM*RT1 + C1*C3*R1*RM*RT2 + C1*C3*R2*RC1*RIN + C1*C3*R2*RIN*RT1 + C1*C3*R2*RIN*RT2 + C1*C3*RC1*RIN*RM + C1*C3*RC1*RIN*RT1 + C1*C3*RC1*RIN*RT2 + C1*C3*RIN*RM*RT1 + C1*C3*RIN*RM*RT2 + C1*C4*R1*R2*RL + C1*C4*R1*R2*RT2 + C1*C4*R1*RL*RM + C1*C4*R1*RL*RT1 + C1*C4*R1*RL*RT2 + C1*C4*R1*RM*RT2 + C1*C4*R1*RT1*RT2 + C1*C4*R2*RIN*RL + C1*C4*R2*RIN*RT2 + C1*C4*RIN*RL*RM + C1*C4*RIN*RL*RT1 + C1*C4*RIN*RL*RT2 + C1*C4*RIN*RM*RT2 + C1*C4*RIN*RT1*RT2 + C2*C3*R1*R2*RC1 + C2*C3*R1*R2*RC2 + C2*C3*R1*RC1*RC2 + C2*C3*R1*RC1*RIN + C2*C3*R1*RC1*RM + C2*C3*R1*RC2*RIN + C2*C3*R1*RC2*RM + C2*C3*R2*RC1*RC2 + C2*C3*R2*RC1*RT1 + C2*C3*R2*RC1*RT2 + C2*C3*R2*RC2*RT1 + C2*C3*R2*RC2*RT2 + C2*C3*RC1*RC2*RIN + C2*C3*RC1*RC2*RM + C2*C3*RC1*RC2*RT1 + C2*C3*RC1*RC2*RT2 + C2*C3*RC1*RIN*RT1 + C2*C3*RC1*RIN*RT2 + C2*C3*RC1*RM*RT1 + C2*C3*RC1*RM*RT2 + C2*C3*RC2*RIN*RT1 + C2*C3*RC2*RIN*RT2 + C2*C3*RC2*RM*RT1 + C2*C3*RC2*RM*RT2 + C2*C4*R1*R2*RC2 + C2*C4*R1*R2*RIN + C2*C4*R1*R2*RL + C2*C4*R1*R2*RT1 + C2*C4*R1*RC2*RL + C2*C4*R1*RC2*RM + C2*C4*R1*RC2*RT1 + C2*C4*R1*RIN*RL + C2*C4*R1*RIN*RM + C2*C4*R1*RIN*RT1 + C2*C4*R1*RL*RM + C2*C4*R1*RM*RT1 + C2*C4*R2*RC2*RIN + C2*C4*R2*RC2*RL + C2*C4*R2*RC2*RT2 + C2*C4*R2*RIN*RT1 + C2*C4*R2*RIN*RT2 + C2*C4*R2*RL*RT1 + C2*C4*R2*RL*RT2 + C2*C4*R2*RT1*RT2 + C2*C4*RC2*RIN*RL + C2*C4*RC2*RIN*RM + C2*C4*RC2*RIN*RT1 + C2*C4*RC2*RL*RM + C2*C4*RC2*RL*RT1 + C2*C4*RC2*RL*RT2 + C2*C4*RC2*RM*RT2 + C2*C4*RC2*RT1*RT2 + C2*C4*RIN*RL*RT1 + C2*C4*RIN*RL*RT2 + C2*C4*RIN*RM*RT1 + C2*C4*RIN*RM*RT2 + C2*C4*RIN*RT1*RT2 + C2*C4*RL*RM*RT1 + C2*C4*RL*RM*RT2 + C2*C4*RM*RT1*RT2 + C3*C4*R1*R2*RC1 + C3*C4*R1*R2*RIN + C3*C4*R1*R2*RL + C3*C4*R1*R2*RT1 + C3*C4*R1*RC1*RL + C3*C4*R1*RC1*RM + C3*C4*R1*RC1*RT1 + C3*C4*R1*RIN*RL + C3*C4*R1*RIN*RM + C3*C4*R1*RIN*RT1 + C3*C4*R1*RL*RM + C3*C4*R1*RM*RT1 + C3*C4*R2*RC1*RIN + C3*C4*R2*RC1*RL + C3*C4*R2*RC1*RT2 + C3*C4*R2*RIN*RT1 + C3*C4*R2*RIN*RT2 + C3*C4*R2*RL*RT1 + C3*C4*R2*RL*RT2 + C3*C4*R2*RT1*RT2 + C3*C4*RC1*RIN*RL + C3*C4*RC1*RIN*RM + C3*C4*RC1*RIN*RT1 + C3*C4*RC1*RL*RM + C3*C4*RC1*RL*RT1 + C3*C4*RC1*RL*RT2 + C3*C4*RC1*RM*RT2 + C3*C4*RC1*RT1*RT2 + C3*C4*RIN*RL*RT1 + C3*C4*RIN*RL*RT2 + C3*C4*RIN*RM*RT1 + C3*C4*RIN*RM*RT2 + C3*C4*RIN*RT1*RT2 + C3*C4*RL*RM*RT1 + C3*C4*RL*RM*RT2 + C3*C4*RM*RT1*RT2;
  const a3 = C1*C2*C3*R1*R2*RC1*RC2 + C1*C2*C3*R1*R2*RC1*RIN + C1*C2*C3*R1*R2*RC1*RT1 + C1*C2*C3*R1*R2*RC1*RT2 + C1*C2*C3*R1*R2*RC2*RIN + C1*C2*C3*R1*R2*RC2*RT1 + C1*C2*C3*R1*R2*RC2*RT2 + C1*C2*C3*R1*RC1*RC2*RM + C1*C2*C3*R1*RC1*RC2*RT1 + C1*C2*C3*R1*RC1*RC2*RT2 + C1*C2*C3*R1*RC1*RIN*RM + C1*C2*C3*R1*RC1*RIN*RT1 + C1*C2*C3*R1*RC1*RIN*RT2 + C1*C2*C3*R1*RC1*RM*RT1 + C1*C2*C3*R1*RC1*RM*RT2 + C1*C2*C3*R1*RC2*RIN*RM + C1*C2*C3*R1*RC2*RIN*RT1 + C1*C2*C3*R1*RC2*RIN*RT2 + C1*C2*C3*R1*RC2*RM*RT1 + C1*C2*C3*R1*RC2*RM*RT2 + C1*C2*C3*R2*RC1*RC2*RIN + C1*C2*C3*R2*RC1*RIN*RT1 + C1*C2*C3*R2*RC1*RIN*RT2 + C1*C2*C3*R2*RC2*RIN*RT1 + C1*C2*C3*R2*RC2*RIN*RT2 + C1*C2*C3*RC1*RC2*RIN*RM + C1*C2*C3*RC1*RC2*RIN*RT1 + C1*C2*C3*RC1*RC2*RIN*RT2 + C1*C2*C3*RC1*RIN*RM*RT1 + C1*C2*C3*RC1*RIN*RM*RT2 + C1*C2*C3*RC2*RIN*RM*RT1 + C1*C2*C3*RC2*RIN*RM*RT2 + C1*C2*C4*R1*R2*RC2*RL + C1*C2*C4*R1*R2*RC2*RT2 + C1*C2*C4*R1*R2*RIN*RL + C1*C2*C4*R1*R2*RIN*RT2 + C1*C2*C4*R1*R2*RL*RT1 + C1*C2*C4*R1*R2*RL*RT2 + C1*C2*C4*R1*R2*RT1*RT2 + C1*C2*C4*R1*RC2*RL*RM + C1*C2*C4*R1*RC2*RL*RT1 + C1*C2*C4*R1*RC2*RL*RT2 + C1*C2*C4*R1*RC2*RM*RT2 + C1*C2*C4*R1*RC2*RT1*RT2 + C1*C2*C4*R1*RIN*RL*RM + C1*C2*C4*R1*RIN*RL*RT1 + C1*C2*C4*R1*RIN*RL*RT2 + C1*C2*C4*R1*RIN*RM*RT2 + C1*C2*C4*R1*RIN*RT1*RT2 + C1*C2*C4*R1*RL*RM*RT1 + C1*C2*C4*R1*RL*RM*RT2 + C1*C2*C4*R1*RM*RT1*RT2 + C1*C2*C4*R2*RC2*RIN*RL + C1*C2*C4*R2*RC2*RIN*RT2 + C1*C2*C4*R2*RIN*RL*RT1 + C1*C2*C4*R2*RIN*RL*RT2 + C1*C2*C4*R2*RIN*RT1*RT2 + C1*C2*C4*RC2*RIN*RL*RM + C1*C2*C4*RC2*RIN*RL*RT1 + C1*C2*C4*RC2*RIN*RL*RT2 + C1*C2*C4*RC2*RIN*RM*RT2 + C1*C2*C4*RC2*RIN*RT1*RT2 + C1*C2*C4*RIN*RL*RM*RT1 + C1*C2*C4*RIN*RL*RM*RT2 + C1*C2*C4*RIN*RM*RT1*RT2 + C1*C3*C4*R1*R2*RC1*RL + C1*C3*C4*R1*R2*RC1*RT2 + C1*C3*C4*R1*R2*RIN*RL + C1*C3*C4*R1*R2*RIN*RT2 + C1*C3*C4*R1*R2*RL*RT1 + C1*C3*C4*R1*R2*RL*RT2 + C1*C3*C4*R1*R2*RT1*RT2 + C1*C3*C4*R1*RC1*RL*RM + C1*C3*C4*R1*RC1*RL*RT1 + C1*C3*C4*R1*RC1*RL*RT2 + C1*C3*C4*R1*RC1*RM*RT2 + C1*C3*C4*R1*RC1*RT1*RT2 + C1*C3*C4*R1*RIN*RL*RM + C1*C3*C4*R1*RIN*RL*RT1 + C1*C3*C4*R1*RIN*RL*RT2 + C1*C3*C4*R1*RIN*RM*RT2 + C1*C3*C4*R1*RIN*RT1*RT2 + C1*C3*C4*R1*RL*RM*RT1 + C1*C3*C4*R1*RL*RM*RT2 + C1*C3*C4*R1*RM*RT1*RT2 + C1*C3*C4*R2*RC1*RIN*RL + C1*C3*C4*R2*RC1*RIN*RT2 + C1*C3*C4*R2*RIN*RL*RT1 + C1*C3*C4*R2*RIN*RL*RT2 + C1*C3*C4*R2*RIN*RT1*RT2 + C1*C3*C4*RC1*RIN*RL*RM + C1*C3*C4*RC1*RIN*RL*RT1 + C1*C3*C4*RC1*RIN*RL*RT2 + C1*C3*C4*RC1*RIN*RM*RT2 + C1*C3*C4*RC1*RIN*RT1*RT2 + C1*C3*C4*RIN*RL*RM*RT1 + C1*C3*C4*RIN*RL*RM*RT2 + C1*C3*C4*RIN*RM*RT1*RT2 + C2*C3*C4*R1*R2*RC1*RC2 + C2*C3*C4*R1*R2*RC1*RIN + C2*C3*C4*R1*R2*RC1*RL + C2*C3*C4*R1*R2*RC1*RT1 + C2*C3*C4*R1*R2*RC2*RIN + C2*C3*C4*R1*R2*RC2*RL + C2*C3*C4*R1*R2*RC2*RT1 + C2*C3*C4*R1*RC1*RC2*RL + C2*C3*C4*R1*RC1*RC2*RM + C2*C3*C4*R1*RC1*RC2*RT1 + C2*C3*C4*R1*RC1*RIN*RL + C2*C3*C4*R1*RC1*RIN*RM + C2*C3*C4*R1*RC1*RIN*RT1 + C2*C3*C4*R1*RC1*RL*RM + C2*C3*C4*R1*RC1*RM*RT1 + C2*C3*C4*R1*RC2*RIN*RL + C2*C3*C4*R1*RC2*RIN*RM + C2*C3*C4*R1*RC2*RIN*RT1 + C2*C3*C4*R1*RC2*RL*RM + C2*C3*C4*R1*RC2*RM*RT1 + C2*C3*C4*R2*RC1*RC2*RIN + C2*C3*C4*R2*RC1*RC2*RL + C2*C3*C4*R2*RC1*RC2*RT2 + C2*C3*C4*R2*RC1*RIN*RT1 + C2*C3*C4*R2*RC1*RIN*RT2 + C2*C3*C4*R2*RC1*RL*RT1 + C2*C3*C4*R2*RC1*RL*RT2 + C2*C3*C4*R2*RC1*RT1*RT2 + C2*C3*C4*R2*RC2*RIN*RT1 + C2*C3*C4*R2*RC2*RIN*RT2 + C2*C3*C4*R2*RC2*RL*RT1 + C2*C3*C4*R2*RC2*RL*RT2 + C2*C3*C4*R2*RC2*RT1*RT2 + C2*C3*C4*RC1*RC2*RIN*RL + C2*C3*C4*RC1*RC2*RIN*RM + C2*C3*C4*RC1*RC2*RIN*RT1 + C2*C3*C4*RC1*RC2*RL*RM + C2*C3*C4*RC1*RC2*RL*RT1 + C2*C3*C4*RC1*RC2*RL*RT2 + C2*C3*C4*RC1*RC2*RM*RT2 + C2*C3*C4*RC1*RC2*RT1*RT2 + C2*C3*C4*RC1*RIN*RL*RT1 + C2*C3*C4*RC1*RIN*RL*RT2 + C2*C3*C4*RC1*RIN*RM*RT1 + C2*C3*C4*RC1*RIN*RM*RT2 + C2*C3*C4*RC1*RIN*RT1*RT2 + C2*C3*C4*RC1*RL*RM*RT1 + C2*C3*C4*RC1*RL*RM*RT2 + C2*C3*C4*RC1*RM*RT1*RT2 + C2*C3*C4*RC2*RIN*RL*RT1 + C2*C3*C4*RC2*RIN*RL*RT2 + C2*C3*C4*RC2*RIN*RM*RT1 + C2*C3*C4*RC2*RIN*RM*RT2 + C2*C3*C4*RC2*RIN*RT1*RT2 + C2*C3*C4*RC2*RL*RM*RT1 + C2*C3*C4*RC2*RL*RM*RT2 + C2*C3*C4*RC2*RM*RT1*RT2;
  const a4 = C1*C2*C3*C4*R1*R2*RC1*RC2*RL + C1*C2*C3*C4*R1*R2*RC1*RC2*RT2 + C1*C2*C3*C4*R1*R2*RC1*RIN*RL + C1*C2*C3*C4*R1*R2*RC1*RIN*RT2 + C1*C2*C3*C4*R1*R2*RC1*RL*RT1 + C1*C2*C3*C4*R1*R2*RC1*RL*RT2 + C1*C2*C3*C4*R1*R2*RC1*RT1*RT2 + C1*C2*C3*C4*R1*R2*RC2*RIN*RL + C1*C2*C3*C4*R1*R2*RC2*RIN*RT2 + C1*C2*C3*C4*R1*R2*RC2*RL*RT1 + C1*C2*C3*C4*R1*R2*RC2*RL*RT2 + C1*C2*C3*C4*R1*R2*RC2*RT1*RT2 + C1*C2*C3*C4*R1*RC1*RC2*RL*RM + C1*C2*C3*C4*R1*RC1*RC2*RL*RT1 + C1*C2*C3*C4*R1*RC1*RC2*RL*RT2 + C1*C2*C3*C4*R1*RC1*RC2*RM*RT2 + C1*C2*C3*C4*R1*RC1*RC2*RT1*RT2 + C1*C2*C3*C4*R1*RC1*RIN*RL*RM + C1*C2*C3*C4*R1*RC1*RIN*RL*RT1 + C1*C2*C3*C4*R1*RC1*RIN*RL*RT2 + C1*C2*C3*C4*R1*RC1*RIN*RM*RT2 + C1*C2*C3*C4*R1*RC1*RIN*RT1*RT2 + C1*C2*C3*C4*R1*RC1*RL*RM*RT1 + C1*C2*C3*C4*R1*RC1*RL*RM*RT2 + C1*C2*C3*C4*R1*RC1*RM*RT1*RT2 + C1*C2*C3*C4*R1*RC2*RIN*RL*RM + C1*C2*C3*C4*R1*RC2*RIN*RL*RT1 + C1*C2*C3*C4*R1*RC2*RIN*RL*RT2 + C1*C2*C3*C4*R1*RC2*RIN*RM*RT2 + C1*C2*C3*C4*R1*RC2*RIN*RT1*RT2 + C1*C2*C3*C4*R1*RC2*RL*RM*RT1 + C1*C2*C3*C4*R1*RC2*RL*RM*RT2 + C1*C2*C3*C4*R1*RC2*RM*RT1*RT2 + C1*C2*C3*C4*R2*RC1*RC2*RIN*RL + C1*C2*C3*C4*R2*RC1*RC2*RIN*RT2 + C1*C2*C3*C4*R2*RC1*RIN*RL*RT1 + C1*C2*C3*C4*R2*RC1*RIN*RL*RT2 + C1*C2*C3*C4*R2*RC1*RIN*RT1*RT2 + C1*C2*C3*C4*R2*RC2*RIN*RL*RT1 + C1*C2*C3*C4*R2*RC2*RIN*RL*RT2 + C1*C2*C3*C4*R2*RC2*RIN*RT1*RT2 + C1*C2*C3*C4*RC1*RC2*RIN*RL*RM + C1*C2*C3*C4*RC1*RC2*RIN*RL*RT1 + C1*C2*C3*C4*RC1*RC2*RIN*RL*RT2 + C1*C2*C3*C4*RC1*RC2*RIN*RM*RT2 + C1*C2*C3*C4*RC1*RC2*RIN*RT1*RT2 + C1*C2*C3*C4*RC1*RIN*RL*RM*RT1 + C1*C2*C3*C4*RC1*RIN*RL*RM*RT2 + C1*C2*C3*C4*RC1*RIN*RM*RT1*RT2 + C1*C2*C3*C4*RC2*RIN*RL*RM*RT1 + C1*C2*C3*C4*RC2*RIN*RL*RM*RT2 + C1*C2*C3*C4*RC2*RIN*RM*RT1*RT2;

  return [
    [b0, b1, b2, b3, b4],
    [a0, a1, a2, a3, a4]
  ];
});